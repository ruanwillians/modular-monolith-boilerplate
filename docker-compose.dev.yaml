version: '3.8'

services:
  # core-app:
  #   build:
  #     context: .
  #     dockerfile: ./apps/core-app/Dockerfile
  #   ports:
  #     - '3001:3001'
  #   env_file:
  #     - ./apps/core-app/.env.development
  #   container_name: core-app
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #     - mongo1

  # adapter:
  #   build:
  #     context: .
  #     dockerfile: ./apps/adapter/Dockerfile
  #   ports:
  #     - '3002:3002'
  #   env_file:
  #     - ./apps/core-app/.env.development
  #   container_name: adapter
  #   depends_on:
  #     - mongo1
  #   restart: unless-stopped

  mongo-agriinfo-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongodb-agriInfo-api
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 -u root -p root --authenticationDatabase admin
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - data1:/data/db

  mongo-agro-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongodb-agro-api
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27018:27017
    command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 -u root -p root --authenticationDatabase admin
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - data2:/data/db

volumes:
  data1:
  data2:
